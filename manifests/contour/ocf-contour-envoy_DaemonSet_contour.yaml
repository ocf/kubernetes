apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: envoy
    app.kubernetes.io/instance: ocf-contour
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-4.3.4
  name: ocf-contour-envoy
  namespace: contour
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: envoy
      app.kubernetes.io/instance: ocf-contour
      app.kubernetes.io/name: contour
  template:
    metadata:
      labels:
        app.kubernetes.io/component: envoy
        app.kubernetes.io/instance: ocf-contour
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: contour
        helm.sh/chart: contour-4.3.4
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity: null
      automountServiceAccountToken: false
      containers:
      - args:
        - envoy
        - shutdown-manager
        command:
        - contour
        image: docker.io/bitnami/contour:1.15.1-debian-10-r9
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - contour
              - envoy
              - shutdown
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 120
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: shutdown-manager
      - args:
        - -c
        - /config/envoy.json
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        command:
        - envoy
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: docker.io/bitnami/envoy:1.17.3-debian-10-r10
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            httpGet:
              path: /shutdown
              port: 8090
              scheme: HTTP
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 120
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: envoy
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
        - containerPort: 8002
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /config
          name: envoy-config
        - mountPath: /certs
          name: envoycert
      dnsPolicy: ClusterFirst
      hostNetwork: false
      initContainers:
      - args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=ocf-contour
        - --xds-port=8001
        - --resources-dir=/config/resources
        - --envoy-cafile=/certs/ca.crt
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        command:
        - contour
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/bitnami/contour:1.15.1-debian-10-r9
        imagePullPolicy: IfNotPresent
        name: envoy-initconfig
        resources:
          limits: {}
          requests: {}
        volumeMounts:
        - mountPath: /config
          name: envoy-config
        - mountPath: /certs
          name: envoycert
          readOnly: true
      restartPolicy: Always
      serviceAccountName: ocf-contour-envoy
      terminationGracePeriodSeconds: 300
      volumes:
      - emptyDir: {}
        name: envoy-config
      - name: envoycert
        secret:
          secretName: envoycert
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
