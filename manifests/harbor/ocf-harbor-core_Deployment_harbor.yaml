apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: ocf-harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-10.0.4
  name: ocf-harbor-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: core
      app.kubernetes.io/instance: ocf-harbor
      app.kubernetes.io/name: harbor
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: a0ab4454c2fe1d3f57871e1cf9c8f836a9bc6059aa09c9d2102ee890ebfdec74
        checksum/configmap-envvars: 3b35112645ecb5545620d410ab254ec63da5cd13992f9a4216a629b5af21731d
      labels:
        app.kubernetes.io/component: core
        app.kubernetes.io/instance: ocf-harbor
        app.kubernetes.io/name: harbor
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: core
                  app.kubernetes.io/instance: ocf-harbor
                  app.kubernetes.io/name: harbor
              namespaces:
              - harbor
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: CORE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: ocf-harbor-core
        - name: JOBSERVICE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: ocf-harbor-jobservice
        envFrom:
        - configMapRef:
            name: ocf-harbor-core-envvars
        - secretRef:
            name: ocf-harbor-core-envvars
        image: docker.io/bitnami/harbor-core:2.2.2-debian-10-r1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/v2.0/ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: core
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/v2.0/ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /api/v2.0/ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /etc/core/app.conf
          name: config
          subPath: app.conf
        - mountPath: /etc/core/key
          name: secret-key
          subPath: key
        - mountPath: /etc/core/private_key.pem
          name: token-service-private-key
          subPath: tls.key
        - mountPath: /etc/core/ca
          name: ca-download
        - mountPath: /etc/core/token
          name: psc
      securityContext:
        fsGroup: 1001
      volumes:
      - configMap:
          items:
          - key: app.conf
            path: app.conf
          name: ocf-harbor-core
        name: config
      - name: secret-key
        secret:
          items:
          - key: secretKey
            path: key
          secretName: ocf-harbor-core
      - name: token-service-private-key
        secret:
          secretName: ocf-harbor-core
      - name: ca-download
        secret:
          secretName: harbor-tls
      - emptyDir: {}
        name: psc
