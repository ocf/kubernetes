apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: notary-server
    app.kubernetes.io/instance: ocf-harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-10.0.4
  name: ocf-harbor-notary-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: notary-server
      app.kubernetes.io/instance: ocf-harbor
      app.kubernetes.io/name: harbor
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: notary-server
        app.kubernetes.io/instance: ocf-harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        helm.sh/chart: harbor-10.0.4
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: notary-server
                  app.kubernetes.io/instance: ocf-harbor
                  app.kubernetes.io/name: harbor
              namespaces:
              - harbor
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: MIGRATIONS_PATH
          value: migrations/server/postgresql
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              key: server_db_url
              name: ocf-harbor-notary-server-envvars
        envFrom: null
        image: docker.io/bitnami/harbor-notary-server:2.2.2-debian-10-r2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: notary-server
          timeoutSeconds: 5
        name: notary-server
        ports:
        - containerPort: 4443
          name: notary-server
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: notary-server
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /etc/notary
          name: notary-config
        - mountPath: /root.crt
          name: root-certificate
          subPath: tls.crt
      securityContext:
        fsGroup: 1001
      volumes:
      - name: notary-config
        secret:
          secretName: ocf-harbor-notary-server
      - name: root-certificate
        secret:
          secretName: ocf-harbor-core
