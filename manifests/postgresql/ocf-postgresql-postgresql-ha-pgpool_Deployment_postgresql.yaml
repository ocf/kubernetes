apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: pgpool
    app.kubernetes.io/instance: ocf-postgresql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql-ha
    helm.sh/chart: postgresql-ha-7.5.2
  name: ocf-postgresql-postgresql-ha-pgpool
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: pgpool
      app.kubernetes.io/instance: ocf-postgresql
      app.kubernetes.io/name: postgresql-ha
  template:
    metadata:
      labels:
        app.kubernetes.io/component: pgpool
        app.kubernetes.io/instance: ocf-postgresql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql-ha
        helm.sh/chart: postgresql-ha-7.5.2
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: pgpool
                  app.kubernetes.io/instance: ocf-postgresql
                  app.kubernetes.io/name: postgresql-ha
              namespaces:
              - postgresql
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: PGPOOL_BACKEND_NODES
          value: 0:ocf-postgresql-postgresql-ha-postgresql-0.ocf-postgresql-postgresql-ha-postgresql-headless:5432,
        - name: PGPOOL_SR_CHECK_USER
          value: repmgr
        - name: PGPOOL_SR_CHECK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: repmgr-password
              name: postgresql-pw
        - name: PGPOOL_SR_CHECK_DATABASE
          value: postgres
        - name: PGPOOL_ENABLE_LDAP
          value: 'no'
        - name: PGPOOL_POSTGRES_USERNAME
          value: postgres
        - name: PGPOOL_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: postgresql-pw
        - name: PGPOOL_ADMIN_USERNAME
          value: admin
        - name: PGPOOL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: pgpool-pw
        - name: PGPOOL_ENABLE_LOAD_BALANCING
          value: 'yes'
        - name: PGPOOL_ENABLE_LOG_CONNECTIONS
          value: 'no'
        - name: PGPOOL_ENABLE_LOG_HOSTNAME
          value: 'yes'
        - name: PGPOOL_ENABLE_LOG_PER_NODE_STATEMENT
          value: 'no'
        - name: PGPOOL_ENABLE_TLS
          value: 'no'
        envFrom: null
        image: docker.io/bitnami/pgpool:4.2.3-debian-10-r2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /opt/bitnami/scripts/pgpool/healthcheck.sh
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: pgpool
        ports:
        - containerPort: 5432
          name: postgresql
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - bash
            - -ec
            - PGPASSWORD=${PGPOOL_POSTGRES_PASSWORD} psql -U "postgres" -d "postgres"
              -h /opt/bitnami/pgpool/tmp -tA -c "SELECT 1" >/dev/null
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsUser: 1001
        volumeMounts: null
      initContainers: null
      securityContext:
        fsGroup: 1001
      volumes: null
