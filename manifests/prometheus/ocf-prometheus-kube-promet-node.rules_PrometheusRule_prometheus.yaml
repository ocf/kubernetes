apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: kube-prometheus-stack
    app.kubernetes.io/instance: ocf-prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 16.0.1
    chart: kube-prometheus-stack-16.0.1
    heritage: Helm
    release: ocf-prometheus
  name: ocf-prometheus-kube-promet-node.rules
  namespace: prometheus
spec:
  groups:
  - name: node.rules
    rules:
    - expr: "topk by(namespace, pod) (1,\n  max by (node, namespace, pod) (\n    label_replace(kube_pod_info{job=\"\
        kube-state-metrics\",node!=\"\"}, \"pod\", \"$1\", \"pod\", \"(.*)\")\n))"
      record: 'node_namespace_pod:kube_pod_info:'
    - expr: "count by (cluster, node) (sum by (node, cpu) (\n  node_cpu_seconds_total{job=\"\
        node-exporter\"}\n* on (namespace, pod) group_left(node)\n  topk by(namespace,\
        \ pod) (1, node_namespace_pod:kube_pod_info:)\n))"
      record: node:node_num_cpu:sum
    - expr: "sum(\n  node_memory_MemAvailable_bytes{job=\"node-exporter\"} or\n  (\n\
        \    node_memory_Buffers_bytes{job=\"node-exporter\"} +\n    node_memory_Cached_bytes{job=\"\
        node-exporter\"} +\n    node_memory_MemFree_bytes{job=\"node-exporter\"} +\n\
        \    node_memory_Slab_bytes{job=\"node-exporter\"}\n  )\n) by (cluster)"
      record: :node_memory_MemAvailable_bytes:sum
