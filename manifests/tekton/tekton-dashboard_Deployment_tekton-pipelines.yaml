apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tekton-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/version: v0.18.1
    dashboard.tekton.dev/release: v0.18.1
    version: v0.18.1
  name: tekton-dashboard
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: dashboard
      app.kubernetes.io/part-of: tekton-dashboard
  template:
    metadata:
      labels:
        app: tekton-dashboard
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: dashboard
        app.kubernetes.io/part-of: tekton-dashboard
        app.kubernetes.io/version: v0.18.1
      name: tekton-dashboard
    spec:
      containers:
      - args:
        - --port=9097
        - --logout-url=
        - --pipelines-namespace=tekton-pipelines
        - --triggers-namespace=tekton-pipelines
        - --read-only=false
        - --log-level=info
        - --log-format=json
        - --namespace=
        - --stream-logs=false
        - --external-logs=
        env:
        - name: INSTALLED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard@sha256:f3b6997aac218cf0141bfae6b2be2ab3e1888493994e3c80ac348a48349fb926
        livenessProbe:
          httpGet:
            path: /health
            port: 9097
        name: tekton-dashboard
        ports:
        - containerPort: 9097
        readinessProbe:
          httpGet:
            path: /readiness
            port: 9097
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: tekton-dashboard
      volumes: []
